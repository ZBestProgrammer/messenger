version: "3.1"

volumes:
  auth-db-data:
  chat-db-data:

services:
  auth-service:
    build:
      context: auth-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - auth-db
    environment:
      - SPRING_DATASOURCE_URL=${AUTH_DB_DOCKER_HOST}
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - PRIVATE_KEY=${PRIVATE_KEY}
      - PUBLIC_KEY=${PUBLIC_KEY}

  chat-service:
    build:
      context: chat-service
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    depends_on:
      - chat-db
      - kafka
    environment:
      - SPRING_DATASOURCE_URL=${CHAT_DB_DOCKER_HOST}
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - PRIVATE_KEY=${PRIVATE_KEY}
      - PUBLIC_KEY=${PUBLIC_KEY}

  auth-db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${AUTH_POSTGRES_DB}
    volumes:
      - auth-db-data:/var/lib/postgresql/data
      - ./db/auth-service/:/docker-entrypoint-initdb.d/
    ports:
      - "127.0.0.1:5433:5432"

  chat-db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${CHAT_POSTGRES_DB}
    volumes:
      - chat-db-data:/var/lib/postgresql/data
      - ./db/chat-service/:/docker-entrypoint-initdb.d/
    ports:
      - "127.0.0.1:5434:5432"

  kafka:
    image: bitnamilegacy/kafka:3.5.1-debian-11-r7
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_KRAFT_MODE: "true"
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      ALLOW_PLAINTEXT_LISTENER: "yes"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8090:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka